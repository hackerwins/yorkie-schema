// Generated from antlr/Schema.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class SchemaLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly IDENTIFIER = 13;
	public static readonly NEWLINE = 14;
	public static readonly COMMENT = 15;
	public static readonly DIGIT = 16;
	public static readonly WHITESPACE = 17;
	public static readonly YORKIE_OBJECT = 18;
	public static readonly YORKIE_ARRAY = 19;
	public static readonly YORKIE_COUNTER = 20;
	public static readonly YORKIE_TEXT = 21;
	public static readonly YORKIE_TREE = 22;
	public static readonly MINUS = 23;
	public static readonly SEMICOLON = 24;
	public static readonly LPAREN = 25;
	public static readonly RPAREN = 26;
	public static readonly LCURLY = 27;
	public static readonly RCURLY = 28;
	public static readonly GT = 29;
	public static readonly LT = 30;
	public static readonly PIPE = 31;
	public static readonly QUESTION = 32;
	public static readonly EQ = 33;
	public static readonly COMMA = 34;
	public static readonly LSQUARE = 35;
	public static readonly RSQUARE = 36;
	public static readonly DOUBLE_QUOTED_STRING = 37;
	public static readonly SINGLE_QUOTED_STRING = 38;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "IDENTIFIER", "NEWLINE", "COMMENT", "DIGIT", 
		"WHITESPACE", "YORKIE_OBJECT", "YORKIE_ARRAY", "YORKIE_COUNTER", "YORKIE_TEXT", 
		"YORKIE_TREE", "MINUS", "SEMICOLON", "LPAREN", "RPAREN", "LCURLY", "RCURLY", 
		"GT", "LT", "PIPE", "QUESTION", "EQ", "COMMA", "LSQUARE", "RSQUARE", "DOUBLE_QUOTED_STRING", 
		"SINGLE_QUOTED_STRING", "ESC",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'type'", "':'", "'string'", "'number'", "'boolean'", "'null'", 
		"'bigint'", "'Uint8Array'", "'Date'", "'true'", "'false'", "'.'", undefined, 
		undefined, undefined, undefined, undefined, "'yorkie.Object'", "'yorkie.Array'", 
		"'yorkie.Counter'", "'yorkie.Text'", "'yorkie.Tree'", "'-'", "';'", "'('", 
		"')'", "'{'", "'}'", "'>'", "'<'", "'|'", "'?'", "'='", "','", "'['", 
		"']'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, "IDENTIFIER", 
		"NEWLINE", "COMMENT", "DIGIT", "WHITESPACE", "YORKIE_OBJECT", "YORKIE_ARRAY", 
		"YORKIE_COUNTER", "YORKIE_TEXT", "YORKIE_TREE", "MINUS", "SEMICOLON", 
		"LPAREN", "RPAREN", "LCURLY", "RCURLY", "GT", "LT", "PIPE", "QUESTION", 
		"EQ", "COMMA", "LSQUARE", "RSQUARE", "DOUBLE_QUOTED_STRING", "SINGLE_QUOTED_STRING",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(SchemaLexer._LITERAL_NAMES, SchemaLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return SchemaLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(SchemaLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "Schema.g4"; }

	// @Override
	public get ruleNames(): string[] { return SchemaLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return SchemaLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return SchemaLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return SchemaLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02(\u0130\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x03\x02\x03\x02\x03" +
		"\x02\x03\x02\x03\x02\x03\x03\x03\x03\x03\x04\x03\x04\x03\x04\x03\x04\x03" +
		"\x04\x03\x04\x03\x04\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03" +
		"\x05\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03" +
		"\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\b\x03\b\x03\b\x03\b\x03\b\x03" +
		"\b\x03\b\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03" +
		"\t\x03\n\x03\n\x03\n\x03\n\x03\n\x03\v\x03\v\x03\v\x03\v\x03\v\x03\f\x03" +
		"\f\x03\f\x03\f\x03\f\x03\f\x03\r\x03\r\x03\x0E\x03\x0E\x07\x0E\x9A\n\x0E" +
		"\f\x0E\x0E\x0E\x9D\v\x0E\x03\x0F\x05\x0F\xA0\n\x0F\x03\x0F\x03\x0F\x03" +
		"\x0F\x03\x0F\x03\x10\x03\x10\x03\x10\x05\x10\xA9\n\x10\x03\x10\x07\x10" +
		"\xAC\n\x10\f\x10\x0E\x10\xAF\v\x10\x03\x10\x03\x10\x03\x11\x03\x11\x03" +
		"\x12\x06\x12\xB6\n\x12\r\x12\x0E\x12\xB7\x03\x12\x03\x12\x03\x13\x03\x13" +
		"\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13" +
		"\x03\x13\x03\x13\x03\x13\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14" +
		"\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x15\x03\x15" +
		"\x03\x15\x03\x15\x03\x15\x03\x15\x03\x15\x03\x15\x03\x15\x03\x15\x03\x15" +
		"\x03\x15\x03\x15\x03\x15\x03\x15\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16" +
		"\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x17\x03\x17" +
		"\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17" +
		"\x03\x17\x03\x18\x03\x18\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1B\x03\x1B" +
		"\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03 " +
		"\x03 \x03!\x03!\x03\"\x03\"\x03#\x03#\x03$\x03$\x03%\x03%\x03&\x03&\x03" +
		"&\x07&\u011D\n&\f&\x0E&\u0120\v&\x03&\x03&\x03\'\x03\'\x03\'\x07\'\u0127" +
		"\n\'\f\'\x0E\'\u012A\v\'\x03\'\x03\'\x03(\x03(\x03(\x02\x02\x02)\x03\x02" +
		"\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11" +
		"\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10" +
		"\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02" +
		"\x18/\x02\x191\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x1F=\x02" +
		" ?\x02!A\x02\"C\x02#E\x02$G\x02%I\x02&K\x02\'M\x02(O\x02\x02\x03\x02\n" +
		"\x05\x02C\\aac|\x06\x022;C\\aac|\x04\x02\f\f\x0F\x0F\x03\x022;\x05\x02" +
		"\v\f\x0F\x0F\"\"\x04\x02\f\f$$\x04\x02\f\f))\t\x02$$))^^ddppttvv\x02\u0137" +
		"\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02" +
		"\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02" +
		"\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02" +
		"\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02" +
		"\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02" +
		"!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03" +
		"\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02" +
		"\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x02" +
		"5\x03\x02\x02\x02\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02;\x03\x02" +
		"\x02\x02\x02=\x03\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03\x02\x02\x02" +
		"\x02C\x03\x02\x02\x02\x02E\x03\x02\x02\x02\x02G\x03\x02\x02\x02\x02I\x03" +
		"\x02\x02\x02\x02K\x03\x02\x02\x02\x02M\x03\x02\x02\x02\x03Q\x03\x02\x02" +
		"\x02\x05V\x03\x02\x02\x02\x07X\x03\x02\x02\x02\t_\x03\x02\x02\x02\vf\x03" +
		"\x02\x02\x02\rn\x03\x02\x02\x02\x0Fs\x03\x02\x02\x02\x11z\x03\x02\x02" +
		"\x02\x13\x85\x03\x02\x02\x02\x15\x8A\x03\x02\x02\x02\x17\x8F\x03\x02\x02" +
		"\x02\x19\x95\x03\x02\x02\x02\x1B\x97\x03\x02\x02\x02\x1D\x9F\x03\x02\x02" +
		"\x02\x1F\xA8\x03\x02\x02\x02!\xB2\x03\x02\x02\x02#\xB5\x03\x02\x02\x02" +
		"%\xBB\x03\x02\x02\x02\'\xC9\x03\x02\x02\x02)\xD6\x03\x02\x02\x02+\xE5" +
		"\x03\x02\x02\x02-\xF1\x03\x02\x02\x02/\xFD\x03\x02\x02\x021\xFF\x03\x02" +
		"\x02\x023\u0101\x03\x02\x02\x025\u0103\x03\x02\x02\x027\u0105\x03\x02" +
		"\x02\x029\u0107\x03\x02\x02\x02;\u0109\x03\x02\x02\x02=\u010B\x03\x02" +
		"\x02\x02?\u010D\x03\x02\x02\x02A\u010F\x03\x02\x02\x02C\u0111\x03\x02" +
		"\x02\x02E\u0113\x03\x02\x02\x02G\u0115\x03\x02\x02\x02I\u0117\x03\x02" +
		"\x02\x02K\u0119\x03\x02\x02\x02M\u0123\x03\x02\x02\x02O\u012D\x03\x02" +
		"\x02\x02QR\x07v\x02\x02RS\x07{\x02\x02ST\x07r\x02\x02TU\x07g\x02\x02U" +
		"\x04\x03\x02\x02\x02VW\x07<\x02\x02W\x06\x03\x02\x02\x02XY\x07u\x02\x02" +
		"YZ\x07v\x02\x02Z[\x07t\x02\x02[\\\x07k\x02\x02\\]\x07p\x02\x02]^\x07i" +
		"\x02\x02^\b\x03\x02\x02\x02_`\x07p\x02\x02`a\x07w\x02\x02ab\x07o\x02\x02" +
		"bc\x07d\x02\x02cd\x07g\x02\x02de\x07t\x02\x02e\n\x03\x02\x02\x02fg\x07" +
		"d\x02\x02gh\x07q\x02\x02hi\x07q\x02\x02ij\x07n\x02\x02jk\x07g\x02\x02" +
		"kl\x07c\x02\x02lm\x07p\x02\x02m\f\x03\x02\x02\x02no\x07p\x02\x02op\x07" +
		"w\x02\x02pq\x07n\x02\x02qr\x07n\x02\x02r\x0E\x03\x02\x02\x02st\x07d\x02" +
		"\x02tu\x07k\x02\x02uv\x07i\x02\x02vw\x07k\x02\x02wx\x07p\x02\x02xy\x07" +
		"v\x02\x02y\x10\x03\x02\x02\x02z{\x07W\x02\x02{|\x07k\x02\x02|}\x07p\x02" +
		"\x02}~\x07v\x02\x02~\x7F\x07:\x02\x02\x7F\x80\x07C\x02\x02\x80\x81\x07" +
		"t\x02\x02\x81\x82\x07t\x02\x02\x82\x83\x07c\x02\x02\x83\x84\x07{\x02\x02" +
		"\x84\x12\x03\x02\x02\x02\x85\x86\x07F\x02\x02\x86\x87\x07c\x02\x02\x87" +
		"\x88\x07v\x02\x02\x88\x89\x07g\x02\x02\x89\x14\x03\x02\x02\x02\x8A\x8B" +
		"\x07v\x02\x02\x8B\x8C\x07t\x02\x02\x8C\x8D\x07w\x02\x02\x8D\x8E\x07g\x02" +
		"\x02\x8E\x16\x03\x02\x02\x02\x8F\x90\x07h\x02\x02\x90\x91\x07c\x02\x02" +
		"\x91\x92\x07n\x02\x02\x92\x93\x07u\x02\x02\x93\x94\x07g\x02\x02\x94\x18" +
		"\x03\x02\x02\x02\x95\x96\x070\x02\x02\x96\x1A\x03\x02\x02\x02\x97\x9B" +
		"\t\x02\x02\x02\x98\x9A\t\x03\x02\x02\x99\x98\x03\x02\x02\x02\x9A\x9D\x03" +
		"\x02\x02\x02\x9B\x99\x03\x02\x02\x02\x9B\x9C\x03\x02\x02\x02\x9C\x1C\x03" +
		"\x02\x02\x02\x9D\x9B\x03\x02\x02\x02\x9E\xA0\x07\x0F\x02\x02\x9F\x9E\x03" +
		"\x02\x02\x02\x9F\xA0\x03\x02\x02\x02\xA0\xA1\x03\x02\x02\x02\xA1\xA2\x07" +
		"\f\x02\x02\xA2\xA3\x03\x02\x02\x02\xA3\xA4\b\x0F\x02\x02\xA4\x1E\x03\x02" +
		"\x02\x02\xA5\xA6\x071\x02\x02\xA6\xA9\x071\x02\x02\xA7\xA9\x07%\x02\x02" +
		"\xA8\xA5\x03\x02\x02\x02\xA8\xA7\x03\x02\x02\x02\xA9\xAD\x03\x02\x02\x02" +
		"\xAA\xAC\n\x04\x02\x02\xAB\xAA\x03\x02\x02\x02\xAC\xAF\x03\x02\x02\x02" +
		"\xAD\xAB\x03\x02\x02\x02\xAD\xAE\x03\x02\x02\x02\xAE\xB0\x03\x02\x02\x02" +
		"\xAF\xAD\x03\x02\x02\x02\xB0\xB1\b\x10\x02\x02\xB1 \x03\x02\x02\x02\xB2" +
		"\xB3\t\x05\x02\x02\xB3\"\x03\x02\x02\x02\xB4\xB6\t\x06\x02\x02\xB5\xB4" +
		"\x03\x02\x02\x02\xB6\xB7\x03\x02\x02\x02\xB7\xB5\x03\x02\x02\x02\xB7\xB8" +
		"\x03\x02\x02\x02\xB8\xB9\x03\x02\x02\x02\xB9\xBA\b\x12\x02\x02\xBA$\x03" +
		"\x02\x02\x02\xBB\xBC\x07{\x02\x02\xBC\xBD\x07q\x02\x02\xBD\xBE\x07t\x02" +
		"\x02\xBE\xBF\x07m\x02\x02\xBF\xC0\x07k\x02\x02\xC0\xC1\x07g\x02\x02\xC1" +
		"\xC2\x070\x02\x02\xC2\xC3\x07Q\x02\x02\xC3\xC4\x07d\x02\x02\xC4\xC5\x07" +
		"l\x02\x02\xC5\xC6\x07g\x02\x02\xC6\xC7\x07e\x02\x02\xC7\xC8\x07v\x02\x02" +
		"\xC8&\x03\x02\x02\x02\xC9\xCA\x07{\x02\x02\xCA\xCB\x07q\x02\x02\xCB\xCC" +
		"\x07t\x02\x02\xCC\xCD\x07m\x02\x02\xCD\xCE\x07k\x02\x02\xCE\xCF\x07g\x02" +
		"\x02\xCF\xD0\x070\x02\x02\xD0\xD1\x07C\x02\x02\xD1\xD2\x07t\x02\x02\xD2" +
		"\xD3\x07t\x02\x02\xD3\xD4\x07c\x02\x02\xD4\xD5\x07{\x02\x02\xD5(\x03\x02" +
		"\x02\x02\xD6\xD7\x07{\x02\x02\xD7\xD8\x07q\x02\x02\xD8\xD9\x07t\x02\x02" +
		"\xD9\xDA\x07m\x02\x02\xDA\xDB\x07k\x02\x02\xDB\xDC\x07g\x02\x02\xDC\xDD" +
		"\x070\x02\x02\xDD\xDE\x07E\x02\x02\xDE\xDF\x07q\x02\x02\xDF\xE0\x07w\x02" +
		"\x02\xE0\xE1\x07p\x02\x02\xE1\xE2\x07v\x02\x02\xE2\xE3\x07g\x02\x02\xE3" +
		"\xE4\x07t\x02\x02\xE4*\x03\x02\x02\x02\xE5\xE6\x07{\x02\x02\xE6\xE7\x07" +
		"q\x02\x02\xE7\xE8\x07t\x02\x02\xE8\xE9\x07m\x02\x02\xE9\xEA\x07k\x02\x02" +
		"\xEA\xEB\x07g\x02\x02\xEB\xEC\x070\x02\x02\xEC\xED\x07V\x02\x02\xED\xEE" +
		"\x07g\x02\x02\xEE\xEF\x07z\x02\x02\xEF\xF0\x07v\x02\x02\xF0,\x03\x02\x02" +
		"\x02\xF1\xF2\x07{\x02\x02\xF2\xF3\x07q\x02\x02\xF3\xF4\x07t\x02\x02\xF4" +
		"\xF5\x07m\x02\x02\xF5\xF6\x07k\x02\x02\xF6\xF7\x07g\x02\x02\xF7\xF8\x07" +
		"0\x02\x02\xF8\xF9\x07V\x02\x02\xF9\xFA\x07t\x02\x02\xFA\xFB\x07g\x02\x02" +
		"\xFB\xFC\x07g\x02\x02\xFC.\x03\x02\x02\x02\xFD\xFE\x07/\x02\x02\xFE0\x03" +
		"\x02\x02\x02\xFF\u0100\x07=\x02\x02\u01002\x03\x02\x02\x02\u0101\u0102" +
		"\x07*\x02\x02\u01024\x03\x02\x02\x02\u0103\u0104\x07+\x02\x02\u01046\x03" +
		"\x02\x02\x02\u0105\u0106\x07}\x02\x02\u01068\x03\x02\x02\x02\u0107\u0108" +
		"\x07\x7F\x02\x02\u0108:\x03\x02\x02\x02\u0109\u010A\x07@\x02\x02\u010A" +
		"<\x03\x02\x02\x02\u010B\u010C\x07>\x02\x02\u010C>\x03\x02\x02\x02\u010D" +
		"\u010E\x07~\x02\x02\u010E@\x03\x02\x02\x02\u010F\u0110\x07A\x02\x02\u0110" +
		"B\x03\x02\x02\x02\u0111\u0112\x07?\x02\x02\u0112D\x03\x02\x02\x02\u0113" +
		"\u0114\x07.\x02\x02\u0114F\x03\x02\x02\x02\u0115\u0116\x07]\x02\x02\u0116" +
		"H\x03\x02\x02\x02\u0117\u0118\x07_\x02\x02\u0118J\x03\x02\x02\x02\u0119" +
		"\u011E\x07$\x02\x02\u011A\u011D\x05O(\x02\u011B\u011D\n\x07\x02\x02\u011C" +
		"\u011A\x03\x02\x02\x02\u011C\u011B\x03\x02\x02\x02\u011D\u0120\x03\x02" +
		"\x02\x02\u011E\u011C\x03\x02\x02\x02\u011E\u011F\x03\x02\x02\x02\u011F" +
		"\u0121\x03\x02\x02\x02\u0120\u011E\x03\x02\x02\x02\u0121\u0122\x07$\x02" +
		"\x02\u0122L\x03\x02\x02\x02\u0123\u0128\x07)\x02\x02\u0124\u0127\x05O" +
		"(\x02\u0125\u0127\n\b\x02\x02\u0126\u0124\x03\x02\x02\x02\u0126\u0125" +
		"\x03\x02\x02\x02\u0127\u012A\x03\x02\x02\x02\u0128\u0126\x03\x02\x02\x02" +
		"\u0128\u0129\x03\x02\x02\x02\u0129\u012B\x03\x02\x02\x02\u012A\u0128\x03" +
		"\x02\x02\x02\u012B\u012C\x07)\x02\x02\u012CN\x03\x02\x02\x02\u012D\u012E" +
		"\x07^\x02\x02\u012E\u012F\t\t\x02\x02\u012FP\x03\x02\x02\x02\f\x02\x9B" +
		"\x9F\xA8\xAD\xB7\u011C\u011E\u0126\u0128\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!SchemaLexer.__ATN) {
			SchemaLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(SchemaLexer._serializedATN));
		}

		return SchemaLexer.__ATN;
	}

}

